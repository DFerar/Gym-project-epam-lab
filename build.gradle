plugins {
    id 'java'
    id 'jacoco'
    id 'org.flywaydb.flyway' version '10.8.1'
    id 'checkstyle'
    id 'war'
}

group = 'com.gym'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    //core
    implementation 'org.springframework:spring-context:6.1.3'
    implementation 'org.springframework:spring-webmvc:6.1.4'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    //test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'org.springframework:spring-test:6.1.3'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    //database
    implementation 'org.flywaydb:flyway-database-postgresql:10.8.1'
    implementation 'org.hibernate.orm:hibernate-core:6.3.1.Final'
    implementation 'org.springframework.data:spring-data-jpa:3.2.0'
    implementation 'org.postgresql:postgresql:42.6.0'
    //utils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    //tomcat
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.87'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.87'
}

test {
    useJUnitPlatform()
    include("**/*Test.class")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/gym/GymCRMApp.*",
                    "com/gym/entity/**.*",
                    "com/gym/storage/StorageInitializer.*",
                    "com/gym/AppConfig.*",
                    "com/gym/GymCRMFacade.*",
                    "com/gym/repositories/**.*",
                    "com/gym/dto/**.*"
            ])
        }))
    }
}
