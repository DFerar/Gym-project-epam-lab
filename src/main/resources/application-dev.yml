eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8080
spring:
  application:
    name: GymCrmApp
  config:
    activate:
      on-profile: "dev"
  datasource:
    url: jdbc:postgresql://localhost:5432/gym
    username: "gym"
    password: "gym"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  flyway:
    baseline-on-migrate: true
    locations: "classpath:db/migrations"
management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 4
        waitDuration: 1000ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
  circuitbreaker:
    instances:
      cb:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10000ms
        failureRateThreshold: 50
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - java.lang.RuntimeException
        ignoreExceptions:
          - java.lang.IllegalArgumentException
          - java.lang.IllegalStateException
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 10
token:
  expiration: 30000000
  key: "53A73E5F1C4E0A2D3B5F2D784E6A1B423D6F247D1F6E5C3A596D635A753HY123ID1123"

cors:
  allowed-origins: "http://localhost**"
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
  allowed-headers:
    - Authorization
    - Content-Type
  allow-credentials: true
